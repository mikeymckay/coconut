// Generated by CoffeeScript 1.7.1
var ClientSummaryView,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

ClientSummaryView = (function(_super) {
  __extends(ClientSummaryView, _super);

  function ClientSummaryView() {
    this.renderResult = __bind(this.renderResult, this);
    this.render = __bind(this.render, this);
    return ClientSummaryView.__super__.constructor.apply(this, arguments);
  }

  ClientSummaryView.prototype.el = '#content';

  ClientSummaryView.prototype.render = function() {
    var data;
    console.log(this.client);
    this.$el.html("<h1>Client " + this.client.clientID + "</h1> <a href='#new/result/Clinical%20Visit/" + this.client.clientID + "'><button>New clinical visit for " + this.client.clientID + "</button></a><br/> <table> " + (data = {
      "Initial Visit Date": this.client.initialVisitDate(),
      "Age": this.client.currentAge(),
      "HIV Status": this.client.hivStatus(),
      "On ART": this.client.onArt(),
      "Last Blood Pressure": this.client.lastBloodPressure(),
      "Allergies": this.client.allergies(),
      "Complaints at Previous Visit": this.client.complaintsAtPreviousVisit(),
      "Treatment Given at Previous Visit": this.client.treatmentGivenAtPreviousVIsit()
    }, _.map(data, function(value, property) {
      return "<tr> <td> " + property + " </td> <td> " + value + " </td> </tr>";
    }).join("")) + " </table> <h2>Previous Visit Data</h2> <br/> " + (_.map(this.client.clientResults, (function(_this) {
      return function(result) {
        var date, id, question;
        date = result.createdAt || result.VisitDate || result.fDate;
        question = result.question || result.source;
        id = result._id || "";
        return "" + question + ": " + date + " <button onClick='$(\"#result-" + id + "\").toggle()' type='button'>View</button> " + (result.question != null ? "<a href='#edit/result/" + id + "'><button>Edit</button></a>" : "") + " <div id='result-" + id + "' style='display: none'> " + (_this.renderResult(result)) + " </div>";
      };
    })(this)).join("")));
    return $("button").button();
  };

  ClientSummaryView.prototype.renderResult = function(result) {
    return "<table> <thead> <th>Property</th> <th>Value</th> </thead> <tbody> " + (_.map(result, function(value, property) {
      return "<tr> <td> " + property + " </td> <td> " + value + " </td> </tr>";
    }).join("")) + " <tr> </tr> </tbody> </table>";
  };

  return ClientSummaryView;

})(Backbone.View);

//# sourceMappingURL=ClientSummary.map
